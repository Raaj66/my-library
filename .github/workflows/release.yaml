on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Get package version
        id: get_package_version
        run: echo "::set-output name=version::$(cat package.json| jq -r '.version')"

      - name: Check release tag against pakcage version
        run: |
          if [[ ${{steps.get_package_version.outputs.version}} == ${{steps.get_release.outputs.tag_name}} ]] 
          then 
            exit 0 
          else 
            echo "Release tag does not match package version"
            exit 1 
          fi

      - name: Get node version
        id: node-version
        run: echo "::set-output name=version::$(cat .nvmrc)"

      - name: Use Node.js ${{ steps.node-version.outputs.version }}
        uses: actions/setup-node@v2
        continue-on-error: true
        with:
          node-version: ${{ steps.node-version.outputs.version }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@icapitalnetwork'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install js dependencies
        run: yarn install --check-files

      - name: Remove .npmrc
        run: rm .npmrc

      - name: Publish package
        run: yarn run publish:package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
